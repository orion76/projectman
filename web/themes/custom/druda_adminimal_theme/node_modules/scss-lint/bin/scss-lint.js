#!/usr/bin/env node

'use strict'

var fs = require('fs');
var path = require('path');
var yaml = require('js-yaml');
var minimist = require('minimist');
var extend = require('deep-extend');

var scssLint = require('../lib/cli');

var defaultConfigFilePath = path.resolve(process.cwd(), 'config/default.yml');
var configFilePath = path.resolve(process.cwd(), '.scss-lint.yml');
var configFile = '';

var args =  minimist(
  process.argv.slice(2),
  {
    alias: {
      c: 'config',
      e: 'exclude',
      f: 'format',
      o: 'out',
      r: 'require',
      i: 'include-linter',
      x: 'exclude-linter',
      h: 'help',
      v: 'version'
    },
    boolean: [
      'help',
      'version',
      'show-formatters',
      'show-linters'
    ],
    string: [
      'config', 'exclude', 'format', 'out', 'require',
      'include-linter', 'exclude-linter'
    ],
    default: {
      'config': configFile,
      'format': 'default'
    }
  }
);

if (args.config) {
  configFile = args.config;
}
else if(fs.existsSync(configFilePath)) {
  configFile = configFilePath;
}
else {
  configFile = defaultConfigFilePath;
}


try {
  var defaults = yaml.safeLoad(fs.readFileSync(configFile, 'utf8'));
  var options = extend(defaults, args);
} catch (e) {
  console.log('Invalid configuration.');
  process.exit(1);
}

var SCSSLint = new scssLint(options);
SCSSLint.run();
